name: Python Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Install package in development mode
      run: |
        pip install -e .

    - name: Validate installation
      run: |
        python -c "import core, parser, utils; print('âœ… All modules imported successfully')"

    - name: Run linting with black (Python 3.10+ only)
      if: matrix.python-version != '3.10'
      run: |
        black --check --diff .

    - name: Run type checking with mypy
      run: |
        mypy core/ parser/ utils/ --ignore-missing-imports

    - name: Run pytest with coverage
      run: |
        pytest tests/ -v --cov=core --cov=parser --cov=utils --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Test CLI functionality
      run: |
        echo "EP(ready)" > test_property.pbtl
        echo "eid,processes,vc,props" > test_trace.csv
        echo "ev1,P1,P1:1,ready" >> test_trace.csv
        python run_monitor.py -p test_property.pbtl -t test_trace.csv --validate-only

    - name: Report test results
      if: always()
      run: |
        echo "âœ… Python ${{ matrix.python-version }} tests completed"
        echo "ðŸ“Š Test matrix status: ${{ job.status }}"