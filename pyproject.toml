[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kairos"
version = "1.0.0"
description = "A PBTL Runtime Verification Tool for Distributed Systems"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Moran Omer", email = "moraneus@gmail.com"}
]
maintainers = [
    {name = "Moran Omer", email = "moraneus@gmail.com"}
]
keywords = ["runtime-verification", "temporal-logic", "distributed-systems", "pbtl"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.8"
dependencies = [
    "sly>=0.5",
    "dataclasses-json>=0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "mypy>=1.0",
    "isort>=5.0",
]

[project.scripts]
kairos = "run_monitor:main"

[project.urls]
Homepage = "https://github.com/moraneus/kairos"
Documentation = "https://github.com/moraneus/kairos#readme"
Repository = "https://github.com/moraneus/kairos"
"Bug Tracker" = "https://github.com/moraneus/kairos/issues"

[tool.setuptools.packages.find]
include = ["core*", "parser*", "utils*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["core", "parser", "utils"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "sly.*",
    "dataclasses_json.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["core", "parser", "utils"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true